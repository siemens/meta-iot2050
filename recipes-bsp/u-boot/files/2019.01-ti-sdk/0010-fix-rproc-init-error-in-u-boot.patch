From ec439a9f4fc648e0757b69d4a673cfa6fc0f18c8 Mon Sep 17 00:00:00 2001
From: Gao Nian <nian.gao@siemens.com>
Date: Thu, 2 Jan 2020 13:54:01 +0800
Subject: [PATCH 10/18] fix:rproc init error in u-boot

Signed-off-by: Gao Nian <nian.gao@siemens.com>
---
 drivers/remoteproc/ti_k3_r5f_rproc.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/drivers/remoteproc/ti_k3_r5f_rproc.c b/drivers/remoteproc/ti_k3_r5f_rproc.c
index 9e6f6c179a..9976b6ff25 100644
--- a/drivers/remoteproc/ti_k3_r5f_rproc.c
+++ b/drivers/remoteproc/ti_k3_r5f_rproc.c
@@ -542,6 +542,7 @@ static int k3_r5f_rproc_configure(struct k3_r5f_core *core)
 {
 	struct k3_r5f_cluster *cluster = core->cluster;
 	u32 set_cfg = 0, clr_cfg = 0, cfg, ctrl, sts;
+	u32 lockstep_permitted;
 	u64 boot_vec = 0;
 	int ret;
 
@@ -559,8 +560,8 @@ static int k3_r5f_rproc_configure(struct k3_r5f_core *core)
 		goto out;
 
 	/* Sanity check for Lockstep mode */
-	if (cluster->mode && is_primary_core(core) &&
-	    !(sts & PROC_BOOT_STATUS_FLAG_R5_LOCKSTEP_PERMITTED)) {
+	lockstep_permitted = sts & PROC_BOOT_STATUS_FLAG_R5_LOCKSTEP_PERMITTED;
+	if (cluster->mode && is_primary_core(core) && (!lockstep_permitted)) {
 		dev_err(core->dev, "LockStep mode not permitted on this device\n");
 		ret = -EINVAL;
 		goto out;
@@ -572,7 +573,7 @@ static int k3_r5f_rproc_configure(struct k3_r5f_core *core)
 		clr_cfg |= PROC_BOOT_CFG_FLAG_R5_TEINIT;
 		if (cluster->mode == CLUSTER_MODE_LOCKSTEP)
 			set_cfg |= PROC_BOOT_CFG_FLAG_R5_LOCKSTEP;
-		else
+		else if (lockstep_permitted)
 			clr_cfg |= PROC_BOOT_CFG_FLAG_R5_LOCKSTEP;
 	}
 
-- 
2.17.1

