From a5588edb0176a045758165ea4b27ee51bbdd3b34 Mon Sep 17 00:00:00 2001
From: "le.jin" <le.jin@siemens.com>
Date: Wed, 29 Jan 2020 21:22:51 +0800
Subject: [PATCH 15/18] feat: enable verified boot

Signed-off-by: le.jin <le.jin@siemens.com>
---
 Makefile                                      |  9 ++++-
 arch/arm/dts/iot2050-common.dtsi              |  9 +++++
 arch/arm/dts/iot2050-r5-common.dtsi           |  9 +++++
 arch/arm/mach-k3/config.mk                    |  1 +
 arch/arm/mach-k3/config_secure.mk             | 22 +++++-----
 arch/arm/mach-k3/dtb_stub.its                 | 31 ++++++++++++++
 arch/arm/mach-k3/make_fit.py                  | 40 ++++++++++++++-----
 common/spl/spl_fit.c                          | 14 ++++++-
 configs/am65x_iot2050_advanced_a53_defconfig  |  5 +++
 .../am65x_iot2050_advanced_gp_a53_defconfig   |  6 +++
 .../am65x_iot2050_advanced_gp_r5_defconfig    |  6 +++
 configs/am65x_iot2050_advanced_r5_defconfig   |  5 +++
 configs/am65x_iot2050_basic_a53_defconfig     |  6 +++
 configs/am65x_iot2050_basic_r5_defconfig      |  6 +++
 scripts/Makefile.spl                          |  3 +-
 tools/k3_fit_atf.sh                           | 19 +++++++++
 16 files changed, 168 insertions(+), 23 deletions(-)
 create mode 100644 arch/arm/mach-k3/dtb_stub.its

diff --git a/Makefile b/Makefile
index 4d3d5cfa24..b75ef447a4 100644
--- a/Makefile
+++ b/Makefile
@@ -898,7 +898,7 @@ cmd_mkimage = $(objtree)/tools/mkimage $(MKIMAGEFLAGS_$(@F)) -d $< $@ \
 
 quiet_cmd_mkfitimage = MKIMAGE $@
 cmd_mkfitimage = $(objtree)/tools/mkimage $(MKIMAGEFLAGS_$(@F)) -D "-i $(obj) -i $(src)"\
-	-f $(U_BOOT_ITS) -E $@ -p $(CONFIG_FIT_EXTERNAL_OFFSET)\
+	-f $(U_BOOT_ITS) $@ -p $(CONFIG_FIT_EXTERNAL_OFFSET)\
 	>$(MKIMAGEOUTPUT) $(if $(KBUILD_VERBOSE:0=), && cat $(MKIMAGEOUTPUT))
 
 quiet_cmd_cat = CAT     $@
@@ -1012,6 +1012,12 @@ dtbs: dts/dt.dtb
 	@:
 dts/dt.dtb: u-boot
 	$(Q)$(MAKE) $(build)=dts dtbs
+ifdef CONFIG_ARCH_K3
+	# Write public key to dtb
+	$(eval DTB_LIST=$(patsubst %,arch/$(ARCH)/dts/%.dtb,$(subst ",,$(CONFIG_OF_LIST))))
+	@$(foreach dtb,$(DTB_LIST),$(objtree)/tools/mkimage -f $(srctree)/arch/arm/mach-k3/dtb_stub.its \
+	-k $(KEY_DIR) -K $(dtb) -r $(basename $(dtb)).itb > $(MKIMAGEOUTPUT);)
+endif
 
 quiet_cmd_copy = COPY    $@
       cmd_copy = cp $< $@
@@ -1206,6 +1212,7 @@ ifndef U_BOOT_ITS
 u-boot.img: $(if $(CONFIG_SPL_LOAD_FIT),u-boot-nodtb.bin dts/dt.dtb,u-boot.bin) FORCE
 	$(call if_changed,mkimage)
 else
+MKIMAGEFLAGS_u-boot.itb = -k $(KEY_DIR)
 u-boot.itb: u-boot-nodtb.bin dts/dt.dtb $(U_BOOT_ITS) FORCE
 	$(call if_changed,mkfitimage)
 	$(BOARD_SIZE_CHECK)
diff --git a/arch/arm/dts/iot2050-common.dtsi b/arch/arm/dts/iot2050-common.dtsi
index 9769818d69..2f4b839cf5 100644
--- a/arch/arm/dts/iot2050-common.dtsi
+++ b/arch/arm/dts/iot2050-common.dtsi
@@ -14,6 +14,15 @@
 		remoteproc1 = &mcu_r5fss0_core1;
 	};
 
+	signature {
+		key-custMpk {
+			required = "conf";
+			algo = "sha256, rsa4096";
+			key-name-hint = "custMpk";
+			u-boot,dm-spl;
+		};
+	};
+
 	gpio-leds {
 		compatible = "gpio-leds";
 		pinctrl-names = "default";
diff --git a/arch/arm/dts/iot2050-r5-common.dtsi b/arch/arm/dts/iot2050-r5-common.dtsi
index 32cd62ec05..6e0caddf3a 100644
--- a/arch/arm/dts/iot2050-r5-common.dtsi
+++ b/arch/arm/dts/iot2050-r5-common.dtsi
@@ -20,6 +20,15 @@
 		remoteproc2 = &a53_2;
 	};
 
+	signature {
+		key-custMpk {
+			required = "conf";
+			algo = "sha256, rsa4096";
+			key-name-hint = "custMpk";
+			u-boot,dm-spl;
+		};
+	};
+
 	a53_0: a53@0 {
 		compatible = "ti,am654-rproc";
 		reg = <0x0 0x00a90000 0x0 0x10>;
diff --git a/arch/arm/mach-k3/config.mk b/arch/arm/mach-k3/config.mk
index 10a6ff3940..54fc53c0bf 100644
--- a/arch/arm/mach-k3/config.mk
+++ b/arch/arm/mach-k3/config.mk
@@ -25,6 +25,7 @@ endif
 else
 KEY=$(patsubst "%",$(srctree)/%,$(CONFIG_SYS_K3_KEY))
 endif
+KEY_DIR=$(dir $(KEY))
 
 quiet_cmd_k3secureimg = SECURE  $@
 cmd_k3secureimg = \
diff --git a/arch/arm/mach-k3/config_secure.mk b/arch/arm/mach-k3/config_secure.mk
index 5c8f1139c6..dd4a9ff9d4 100644
--- a/arch/arm/mach-k3/config_secure.mk
+++ b/arch/arm/mach-k3/config_secure.mk
@@ -4,24 +4,28 @@
 #	Andrew F. Davis <afd@ti.com>
 
 %.dtb_HS: %.dtb FORCE
-	$(call if_changed,k3secureimg,$(dir $(KEY))/x509-sysfw-template.txt)
+	$(call if_changed,k3secureimg,$(KEY_DIR)/x509-sysfw-template.txt)
 
 $(obj)/u-boot-spl-nodtb.bin_HS: $(obj)/u-boot-spl-nodtb.bin FORCE
-	$(call if_changed,k3secureimg,$(dir $(KEY))/x509-sysfw-template.txt)
+	$(call if_changed,k3secureimg,$(KEY_DIR)/x509-sysfw-template.txt)
+
+MKIMAGEFLAGS_tispl.bin_HS = -k $(KEY_DIR)
 
 tispl.bin_HS: $(obj)/u-boot-spl-nodtb.bin_HS $(patsubst %,$(obj)/dts/%.dtb_HS,$(subst ",,$(CONFIG_SPL_OF_LIST))) $(SPL_ITS) FORCE
 	$(call if_changed,mkfitimage)
 
-MKIMAGEFLAGS_u-boot.img_HS = -f auto -A $(ARCH) -T firmware -C none -O u-boot \
-	-a $(CONFIG_SYS_TEXT_BASE) -e $(CONFIG_SYS_UBOOT_START) \
-	-n "U-Boot $(UBOOTRELEASE) for $(BOARD) board" -E \
-	$(patsubst %,-b arch/$(ARCH)/dts/%.dtb_HS,$(subst ",,$(CONFIG_OF_LIST)))
+MKIMAGEFLAGS_u-boot.img_HS = -k $(KEY_DIR)
 
 OF_LIST_TARGETS = $(patsubst %,arch/$(ARCH)/dts/%.dtb,$(subst ",,$(CONFIG_OF_LIST)))
 $(OF_LIST_TARGETS): dtbs
 
 u-boot-nodtb.bin_HS: u-boot-nodtb.bin FORCE
-	$(call if_changed,k3secureimg,$(dir $(KEY))/x509-sysfw-template.txt)
+	$(call if_changed,k3secureimg,$(KEY_DIR)/x509-sysfw-template.txt)
+
+U_BOOT_ITS_HS := u_boot.its_HS
+$(U_BOOT_ITS_HS):
+	IS_HS=1 $(srctree)/arch/$(ARCH)/mach-k3/make_fit.py $(BOARD) \
+	$(patsubst %,arch/$(ARCH)/dts/%.dtb,$(subst ",,$(CONFIG_OF_LIST))) > $@
 
-u-boot.img_HS: u-boot-nodtb.bin_HS u-boot.img $(patsubst %.dtb,%.dtb_HS,$(OF_LIST_TARGETS)) FORCE
-	$(call if_changed,mkimage)
+u-boot.img_HS: u-boot-nodtb.bin_HS u-boot.img $(patsubst %.dtb,%.dtb_HS,$(OF_LIST_TARGETS)) $(U_BOOT_ITS_HS) FORCE
+	$(objtree)/tools/mkimage -f $(U_BOOT_ITS_HS) $(MKIMAGEFLAGS_$(@F)) $@ -p $(CONFIG_FIT_EXTERNAL_OFFSET)
diff --git a/arch/arm/mach-k3/dtb_stub.its b/arch/arm/mach-k3/dtb_stub.its
new file mode 100644
index 0000000000..e30b2f7b96
--- /dev/null
+++ b/arch/arm/mach-k3/dtb_stub.its
@@ -0,0 +1,31 @@
+/dts-v1/;
+
+/ {
+	description = "Stub ITS";
+	#address-cells = <0x1>;
+	images {
+		stub {
+			description = "Stub ITS";
+			type = "firmware";
+			arch = "arm";
+			compression = "none";
+			data=<0>;
+			hash-1 {
+				algo = "sha256";
+			};
+		};
+	};
+	configurations {
+		default = "conf-stub";
+		conf-stub {
+			description = "stub";
+			stub = "stub";
+			signature {
+				algo = "sha256,rsa4096";
+				key-name-hint = "custMpk";
+				sign-images = "stub";
+			};
+		};
+	};
+};
+
diff --git a/arch/arm/mach-k3/make_fit.py b/arch/arm/mach-k3/make_fit.py
index 505aeda419..625c4a1bd3 100755
--- a/arch/arm/mach-k3/make_fit.py
+++ b/arch/arm/mach-k3/make_fit.py
@@ -29,8 +29,10 @@ core_template = string.Template("""
 			compression = "none";
 			load = <$loadaddr>;
 			entry = <0x0>;
-			data = /incbin/("u-boot-nodtb.bin");
-
+			data = /incbin/("u-boot-nodtb.bin$hs");
+			hash-1 {
+				algo = "sha256";
+			};
 		};
 
 		$dtbs
@@ -48,13 +50,24 @@ conf_template = string.Template("""
 			description = "$dtb";
 			firmware = "u-boot";
 			fdt = "$dtb.dtb";
-                };
+			signature {
+				algo = "sha256,rsa4096";
+				key-name-hint = "custMpk";
+				sign-images = "fdt", "firmware";
+			};
+		};
 	""")
 
 fdt_template = string.Template("""
 		$basename {
 			description = "$basename";
-			data = /incbin/("$dtbdir/$basename");
+			data = /incbin/("$dtbdir/$basename$hs");
+			type = "flat_dt";
+			arch = "arm";
+			compression = "none";
+			hash-1 {
+				algo = "sha256";
+			};
 		};
 """)
 
@@ -95,10 +108,10 @@ def generate_confs(dtbs):
     return "\n".join(confs)
 
 
-def generate_fdts(dtbos, dtbdir):
+def generate_fdts(hs, dtbos, dtbdir):
     fdts = []
     for dtbo in dtbos:
-        fdts.append(fdt_template.substitute(basename=dtbo, dtbdir=dtbdir))
+        fdts.append(fdt_template.substitute(hs=hs, basename=dtbo, dtbdir=dtbdir))
     return "\n".join(fdts)
 
 
@@ -114,17 +127,21 @@ def get_u_boot_test_base():
                 return m.group(1)
 
 
-def generate_its(board, dtbs):
+def generate_its(board, hs, dtbs):
     sys_text_base = get_u_boot_test_base()
     dtbdir = '/'.join(dtbs[0].split('/')[:-1])
     dtbs = [dtb.split('/')[-1] for dtb in dtbs]
-
+    if (hs == "1") or (hs == "Y"):
+        hs = "_HS"
+    else:
+        hs = ""
     print(core_template.substitute(
         loadaddr=sys_text_base,
         board=board,
+        hs=hs,
         confs=generate_confs(dtbs),
-        dtbs=generate_fdts(dtbs, dtbdir),
-        overlays=generate_fdts(get_overlays(board), dtbdir))
+        dtbs=generate_fdts(hs, dtbs, dtbdir),
+        overlays=generate_fdts(hs, get_overlays(board), dtbdir))
     )
 
 
@@ -148,7 +165,8 @@ def main():
 
     board = sys.argv[1]
     dtbs = sys.argv[2:]
-    generate_its(board, dtbs)
+    hs = os.getenv('IS_HS', "")
+    generate_its(board, hs, dtbs)
 
 
 if __name__ == "__main__":
diff --git a/common/spl/spl_fit.c b/common/spl/spl_fit.c
index 31dd33bdd8..536dacb316 100644
--- a/common/spl/spl_fit.c
+++ b/common/spl/spl_fit.c
@@ -421,7 +421,7 @@ int spl_load_simple_fit_ex(struct spl_image_info *spl_image,
 	unsigned long count;
 	struct spl_image_info image_info;
 	int node = -1;
-	int images, ret;
+	int images, configs, ret;
 	int base_offset, hsize, align_len = ARCH_DMA_MINALIGN - 1;
 	int index = 0;
 
@@ -486,6 +486,18 @@ int spl_load_simple_fit_ex(struct spl_image_info *spl_image,
 		debug("%s: Cannot find /images node: %d\n", __func__, images);
 		return -1;
 	}
+#ifdef CONFIG_SPL_FIT_SIGNATURE
+	configs = fit_find_config_node(fit);
+	if (configs < 0) {
+		debug("%s: Cannot find /configurations node: %d\n", __func__, configs);
+		return -1;
+	}
+	printf("Using '%s' configuration\n", fdt_get_name(fit, configs, NULL));
+	puts("## Verifying Hash Integrity ... ");
+	if(fit_config_verify(fit, configs))
+		return -EPERM;
+	puts("OK\n");
+#endif
 
 #ifdef CONFIG_SPL_FPGA_SUPPORT
 	node = spl_fit_get_image_node(fit, images, "fpga", 0);
diff --git a/configs/am65x_iot2050_advanced_a53_defconfig b/configs/am65x_iot2050_advanced_a53_defconfig
index 38f61c2fea..861b76697b 100644
--- a/configs/am65x_iot2050_advanced_a53_defconfig
+++ b/configs/am65x_iot2050_advanced_a53_defconfig
@@ -162,3 +162,8 @@ CONFIG_SPL_BLOCK_CACHE=y
 CONFIG_LED=y
 CONFIG_LED_GPIO=y
 CONFIG_SYS_K3_KEY="keys/custMpk.pem"
+CONFIG_SPL_FIT_SIGNATURE=y
+CONFIG_SPL_CRYPTO_SUPPORT=y
+CONFIG_SPL_HASH_SUPPORT=y
+CONFIG_FIT_SIGNATURE=y
+CONFIG_IMAGE_FORMAT_LEGACY=y
\ No newline at end of file
diff --git a/configs/am65x_iot2050_advanced_gp_a53_defconfig b/configs/am65x_iot2050_advanced_gp_a53_defconfig
index 5a0a1f67cb..c0bb580d69 100644
--- a/configs/am65x_iot2050_advanced_gp_a53_defconfig
+++ b/configs/am65x_iot2050_advanced_gp_a53_defconfig
@@ -159,3 +159,9 @@ CONFIG_HEXDUMP=y
 CONFIG_OF_LIBFDT_OVERLAY=y
 CONFIG_SPI_FLASH_SFDP_SUPPORT=y
 CONFIG_SPL_SPI_FLASH_SFDP_SUPPORT=y
+CONFIG_SYS_K3_KEY="keys/custMpk.pem"
+CONFIG_SPL_FIT_SIGNATURE=y
+CONFIG_SPL_CRYPTO_SUPPORT=y
+CONFIG_SPL_HASH_SUPPORT=y
+CONFIG_FIT_SIGNATURE=y
+CONFIG_IMAGE_FORMAT_LEGACY=y
\ No newline at end of file
diff --git a/configs/am65x_iot2050_advanced_gp_r5_defconfig b/configs/am65x_iot2050_advanced_gp_r5_defconfig
index 021900b5eb..48b3d14842 100644
--- a/configs/am65x_iot2050_advanced_gp_r5_defconfig
+++ b/configs/am65x_iot2050_advanced_gp_r5_defconfig
@@ -123,3 +123,9 @@ CONFIG_OMAP_TIMER=y
 CONFIG_FS_FAT_MAX_CLUSTSIZE=16384
 CONFIG_SPI_FLASH_SFDP_SUPPORT=y
 CONFIG_SPL_SPI_FLASH_SFDP_SUPPORT=y
+CONFIG_SYS_K3_KEY="keys/custMpk.pem"
+CONFIG_SPL_FIT_SIGNATURE=y
+CONFIG_SPL_CRYPTO_SUPPORT=y
+CONFIG_SPL_HASH_SUPPORT=y
+CONFIG_FIT_SIGNATURE=y
+CONFIG_IMAGE_FORMAT_LEGACY=y
\ No newline at end of file
diff --git a/configs/am65x_iot2050_advanced_r5_defconfig b/configs/am65x_iot2050_advanced_r5_defconfig
index 7b67bb91e8..11cfb1386a 100644
--- a/configs/am65x_iot2050_advanced_r5_defconfig
+++ b/configs/am65x_iot2050_advanced_r5_defconfig
@@ -122,3 +122,8 @@ CONFIG_SPL_TIMER=y
 CONFIG_OMAP_TIMER=y
 CONFIG_FS_FAT_MAX_CLUSTSIZE=16384
 CONFIG_SYS_K3_KEY="keys/custMpk.pem"
+CONFIG_SPL_FIT_SIGNATURE=y
+CONFIG_SPL_CRYPTO_SUPPORT=y
+CONFIG_SPL_HASH_SUPPORT=y
+CONFIG_FIT_SIGNATURE=y
+CONFIG_IMAGE_FORMAT_LEGACY=y
\ No newline at end of file
diff --git a/configs/am65x_iot2050_basic_a53_defconfig b/configs/am65x_iot2050_basic_a53_defconfig
index 124cc496fd..9f542dea2c 100644
--- a/configs/am65x_iot2050_basic_a53_defconfig
+++ b/configs/am65x_iot2050_basic_a53_defconfig
@@ -159,3 +159,9 @@ CONFIG_HEXDUMP=y
 CONFIG_OF_LIBFDT_OVERLAY=y
 CONFIG_SPI_FLASH_SFDP_SUPPORT=y
 CONFIG_SPL_SPI_FLASH_SFDP_SUPPORT=y
+CONFIG_SYS_K3_KEY="keys/custMpk.pem"
+CONFIG_SPL_FIT_SIGNATURE=y
+CONFIG_SPL_CRYPTO_SUPPORT=y
+CONFIG_SPL_HASH_SUPPORT=y
+CONFIG_FIT_SIGNATURE=y
+CONFIG_IMAGE_FORMAT_LEGACY=y
\ No newline at end of file
diff --git a/configs/am65x_iot2050_basic_r5_defconfig b/configs/am65x_iot2050_basic_r5_defconfig
index f5c12f746f..a05a1e53c2 100644
--- a/configs/am65x_iot2050_basic_r5_defconfig
+++ b/configs/am65x_iot2050_basic_r5_defconfig
@@ -123,3 +123,9 @@ CONFIG_OMAP_TIMER=y
 CONFIG_FS_FAT_MAX_CLUSTSIZE=16384
 CONFIG_SPI_FLASH_SFDP_SUPPORT=y
 CONFIG_SPL_SPI_FLASH_SFDP_SUPPORT=y
+CONFIG_SYS_K3_KEY="keys/custMpk.pem"
+CONFIG_SPL_FIT_SIGNATURE=y
+CONFIG_SPL_CRYPTO_SUPPORT=y
+CONFIG_SPL_HASH_SUPPORT=y
+CONFIG_FIT_SIGNATURE=y
+CONFIG_IMAGE_FORMAT_LEGACY=y
\ No newline at end of file
diff --git a/scripts/Makefile.spl b/scripts/Makefile.spl
index 29626e0025..1f15479e33 100644
--- a/scripts/Makefile.spl
+++ b/scripts/Makefile.spl
@@ -154,7 +154,7 @@ cmd_mkimage = $(objtree)/tools/mkimage $(MKIMAGEFLAGS_$(@F)) -d $< $@ \
 	>$(MKIMAGEOUTPUT) $(if $(KBUILD_VERBOSE:0=), && cat $(MKIMAGEOUTPUT))
 
 quiet_cmd_mkfitimage = MKIMAGE $@
-cmd_mkfitimage = $(objtree)/tools/mkimage $(MKIMAGEFLAGS_$(@F)) -f $(SPL_ITS) -E $@ \
+cmd_mkfitimage = $(objtree)/tools/mkimage $(MKIMAGEFLAGS_$(@F)) -f $(SPL_ITS) $@ \
 	$(if $(KBUILD_VERBOSE:1=), MKIMAGEOUTPUT)
 
 MKIMAGEFLAGS_MLO = -T omapimage -a $(CONFIG_SPL_TEXT_BASE)
@@ -433,6 +433,7 @@ $(obj)/$(SPL_BIN).multidtb.fit.lzo: $(obj)/$(SPL_BIN).multidtb.fit
 	@lzop -f9 $< > $@
 
 ifdef CONFIG_ARCH_K3
+MKIMAGEFLAGS_tispl.bin = -k $(KEY_DIR)
 tispl.bin: $(obj)/u-boot-spl-nodtb.bin $(SHRUNK_ARCH_DTB) $(SPL_ITS) FORCE
 	$(call if_changed,mkfitimage)
 endif
diff --git a/tools/k3_fit_atf.sh b/tools/k3_fit_atf.sh
index 4e9f69c087..f7b9bbc24b 100755
--- a/tools/k3_fit_atf.sh
+++ b/tools/k3_fit_atf.sh
@@ -42,6 +42,9 @@ cat << __HEADER_EOF
 			os = "arm-trusted-firmware";
 			load = <0x70000000>;
 			entry = <0x70000000>;
+			hash-1 {
+				algo = "sha256";
+			};
 		};
 		tee {
 			description = "OPTEE";
@@ -52,6 +55,9 @@ cat << __HEADER_EOF
 			os = "tee";
 			load = <0x9e800000>;
 			entry = <0x9e800000>;
+			hash-1 {
+				algo = "sha256";
+			};
 		};
 		spl {
 			description = "SPL (64-bit)";
@@ -62,6 +68,9 @@ cat << __HEADER_EOF
 			compression = "none";
 			load = <0x80080000>;
 			entry = <0x80080000>;
+			hash-1 {
+				algo = "sha256";
+			};
 		};
 __HEADER_EOF
 
@@ -74,6 +83,9 @@ do
 			type = "flat_dt";
 			arch = "arm";
 			compression = "none";
+			hash-1 {
+				algo = "sha256";
+			};
 		};
 __FDT_IMAGE_EOF
 done
@@ -92,7 +104,14 @@ do
 			description = "$(basename $dtname .dtb)";
 			firmware = "atf";
 			loadables = "tee", "spl";
+			tee = "tee";
+			spl = "spl";
 			fdt = "$(basename $dtname)";
+			signature {
+				algo = "sha256,rsa4096";
+				key-name-hint = "custMpk";
+				sign-images = "fdt", "firmware", "tee", "spl";
+			};
 		};
 __CONF_SECTION_EOF
 done
-- 
2.17.1

