From 549a95faa2fca208d14bb614d8b1e17733d6c058 Mon Sep 17 00:00:00 2001
From: "le.jin" <le.jin@siemens.com>
Date: Tue, 12 Nov 2019 19:23:40 +0800
Subject: [PATCH 05/18] am654x: remove dependency of TI_SECURE_DEV_PKG

Signed-off-by: le.jin <le.jin@siemens.com>
---
 arch/arm/mach-k3/config.mk                   | 20 ++++++++++++-----
 arch/arm/mach-k3/config_secure.mk            | 23 +++-----------------
 configs/am65x_iot2050_advanced_a53_defconfig |  1 +
 configs/am65x_iot2050_advanced_r5_defconfig  |  1 +
 tools/k3_gen_x509_cert.sh                    | 12 ++++++++--
 5 files changed, 30 insertions(+), 27 deletions(-)

diff --git a/arch/arm/mach-k3/config.mk b/arch/arm/mach-k3/config.mk
index f6b63db349..10a6ff3940 100644
--- a/arch/arm/mach-k3/config.mk
+++ b/arch/arm/mach-k3/config.mk
@@ -3,8 +3,6 @@
 # Copyright (C) 2017-2018 Texas Instruments Incorporated - http://www.ti.com/
 #	Lokesh Vutla <lokeshvutla@ti.com>
 
-ifdef CONFIG_SPL_BUILD
-
 # Openssl is required to generate x509 certificate.
 # Error out if openssl is not available.
 ifeq ($(shell which openssl),)
@@ -28,6 +26,19 @@ else
 KEY=$(patsubst "%",$(srctree)/%,$(CONFIG_SYS_K3_KEY))
 endif
 
+quiet_cmd_k3secureimg = SECURE  $@
+cmd_k3secureimg = \
+	$(if $2, \
+		$(srctree)/tools/k3_gen_x509_cert.sh -c 16 -b $< \
+					-o $@ -l $(CONFIG_SPL_TEXT_BASE) -k $(KEY) -t $2 \
+		$(if $(KBUILD_VERBOSE:1=), >/dev/null), \
+		$(srctree)/tools/k3_gen_x509_cert.sh -c 16 -b $< \
+					-o $@ -l $(CONFIG_SPL_TEXT_BASE) -k $(KEY) \
+		$(if $(KBUILD_VERBOSE:1=), >/dev/null) \
+	)
+
+ifdef CONFIG_SPL_BUILD
+
 # tiboot3.bin is mandated by ROM and ROM only supports R5 boot.
 # So restrict tiboot3.bin creation for CPU_V7R.
 ifdef CONFIG_CPU_V7R
@@ -40,9 +51,8 @@ image_check: $(obj)/u-boot-spl.bin FORCE
 		exit 1;							    \
 	fi
 
-tiboot3.bin: image_check FORCE
-	$(srctree)/tools/k3_gen_x509_cert.sh -c 16 -b $(obj)/u-boot-spl.bin \
-				-o $@ -l $(CONFIG_SPL_TEXT_BASE) -k $(KEY)
+tiboot3.bin: $(obj)/u-boot-spl.bin image_check FORCE
+	$(call if_changed,k3secureimg)
 
 ALL-y	+= tiboot3.bin
 endif
diff --git a/arch/arm/mach-k3/config_secure.mk b/arch/arm/mach-k3/config_secure.mk
index 6d63c57665..5c8f1139c6 100644
--- a/arch/arm/mach-k3/config_secure.mk
+++ b/arch/arm/mach-k3/config_secure.mk
@@ -3,28 +3,11 @@
 # Copyright (C) 2018 Texas Instruments, Incorporated - http://www.ti.com/
 #	Andrew F. Davis <afd@ti.com>
 
-quiet_cmd_k3secureimg = SECURE  $@
-ifneq ($(TI_SECURE_DEV_PKG),)
-ifneq ($(wildcard $(TI_SECURE_DEV_PKG)/scripts/secure-binary-image.sh),)
-cmd_k3secureimg = $(TI_SECURE_DEV_PKG)/scripts/secure-binary-image.sh \
-	$< $@ \
-	$(if $(KBUILD_VERBOSE:1=), >/dev/null)
-else
-cmd_k3secureimg = echo "WARNING:" \
-	"$(TI_SECURE_DEV_PKG)/scripts/secure-binary-image.sh not found." \
-	"$@ was NOT secured!"; cp $< $@
-endif
-else
-cmd_k3secureimg = echo "WARNING: TI_SECURE_DEV_PKG environment" \
-	"variable must be defined for TI secure devices." \
-	"$@ was NOT secured!"; cp $< $@
-endif
-
 %.dtb_HS: %.dtb FORCE
-	$(call if_changed,k3secureimg)
+	$(call if_changed,k3secureimg,$(dir $(KEY))/x509-sysfw-template.txt)
 
 $(obj)/u-boot-spl-nodtb.bin_HS: $(obj)/u-boot-spl-nodtb.bin FORCE
-	$(call if_changed,k3secureimg)
+	$(call if_changed,k3secureimg,$(dir $(KEY))/x509-sysfw-template.txt)
 
 tispl.bin_HS: $(obj)/u-boot-spl-nodtb.bin_HS $(patsubst %,$(obj)/dts/%.dtb_HS,$(subst ",,$(CONFIG_SPL_OF_LIST))) $(SPL_ITS) FORCE
 	$(call if_changed,mkfitimage)
@@ -38,7 +21,7 @@ OF_LIST_TARGETS = $(patsubst %,arch/$(ARCH)/dts/%.dtb,$(subst ",,$(CONFIG_OF_LIS
 $(OF_LIST_TARGETS): dtbs
 
 u-boot-nodtb.bin_HS: u-boot-nodtb.bin FORCE
-	$(call if_changed,k3secureimg)
+	$(call if_changed,k3secureimg,$(dir $(KEY))/x509-sysfw-template.txt)
 
 u-boot.img_HS: u-boot-nodtb.bin_HS u-boot.img $(patsubst %.dtb,%.dtb_HS,$(OF_LIST_TARGETS)) FORCE
 	$(call if_changed,mkimage)
diff --git a/configs/am65x_iot2050_advanced_a53_defconfig b/configs/am65x_iot2050_advanced_a53_defconfig
index a2f1f37b99..d05fedd64f 100644
--- a/configs/am65x_iot2050_advanced_a53_defconfig
+++ b/configs/am65x_iot2050_advanced_a53_defconfig
@@ -160,3 +160,4 @@ CONFIG_BLOCK_CACHE=y
 CONFIG_SPL_BLOCK_CACHE=y
 CONFIG_LED=y
 CONFIG_LED_GPIO=y
+CONFIG_SYS_K3_KEY="keys/custMpk.pem"
diff --git a/configs/am65x_iot2050_advanced_r5_defconfig b/configs/am65x_iot2050_advanced_r5_defconfig
index f71b13d7ee..dce7a3e0bd 100644
--- a/configs/am65x_iot2050_advanced_r5_defconfig
+++ b/configs/am65x_iot2050_advanced_r5_defconfig
@@ -120,3 +120,4 @@ CONFIG_TI_SECURE_DEVICE=y
 CONFIG_SPL_FIT_IMAGE_POST_PROCESS=y
 CONFIG_BLOCK_CACHE=y
 CONFIG_SPL_BLOCK_CACHE=y
+CONFIG_SYS_K3_KEY="keys/custMpk.pem"
diff --git a/tools/k3_gen_x509_cert.sh b/tools/k3_gen_x509_cert.sh
index ec8e5b9f8d..5e77058119 100755
--- a/tools/k3_gen_x509_cert.sh
+++ b/tools/k3_gen_x509_cert.sh
@@ -151,8 +151,9 @@ options_help[k]="key_file:file with key inside it. If not provided script genera
 options_help[o]="output_file:Name of the final output file. default to $OUTPUT"
 options_help[c]="core_id:target core id on which the image would be running. Default to $BOOTCORE"
 options_help[l]="loadaddr: Target load address of the binary in hex. Default to $LOADADDR"
+options_help[t]="template: Use predefined certificate template rather than generated one"
 
-while getopts "b:k:o:c:l:h" opt
+while getopts "b:k:o:c:l:t:h" opt
 do
 	case $opt in
 	b)
@@ -170,6 +171,9 @@ do
 	c)
 		BOOTCORE=$OPTARG
 	;;
+	t)
+		TEMPLATE=$OPTARG
+	;;
 	h)
 		usage
 		exit 0
@@ -233,7 +237,11 @@ gen_cert() {
 	openssl req -new -x509 -key $KEY -nodes -outform DER -out $CERT -config $TEMP_X509 -sha512
 }
 
-gen_template
+if [ -n "$TEMPLATE" ]; then
+	cp $TEMPLATE x509-template.txt
+else
+	gen_template
+fi
 gen_cert
 cat $CERT $BIN > $OUTPUT
 
-- 
2.17.1

