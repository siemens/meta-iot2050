From d8aaae7d8b1ee73fb50a00abdde7f7a3c1e9a372 Mon Sep 17 00:00:00 2001
From: Gao Nian <nian.gao@siemens.com>
Date: Tue, 12 Nov 2019 19:31:47 +0800
Subject: [PATCH 08/18] feat:add UUID checking before run distro_bootcmd

Signed-off-by: Gao Nian <nian.gao@siemens.com>
---
 include/configs/iot2050.h | 84 +++++++++++++++++++++++++++++++--------
 1 file changed, 68 insertions(+), 16 deletions(-)

diff --git a/include/configs/iot2050.h b/include/configs/iot2050.h
index 8f7b344cb3..bd8bcb415b 100644
--- a/include/configs/iot2050.h
+++ b/include/configs/iot2050.h
@@ -9,7 +9,6 @@
 #define __CONFIG_IOT2050_H
 
 #include <linux/sizes.h>
-#include <config_distro_bootcmd.h>
 #include <environment/ti/mmc.h>
 
 #define CONFIG_ENV_SIZE			(128 << 10)
@@ -66,19 +65,6 @@
 	"uuid_disk=${uuid_gpt_disk};" \
 	"name=rootfs,start=0,size=-,uuid=${uuid_gpt_rootfs}\0"
 
-#define EXTRA_ENV_UUID_VERIFY                           \
-    "uuid_devices=mmc1 mmc0 usb0 usb1 usb2\0"           \
-    "uuid_get_mmc=part uuid mmc ${devno}:1 uuid_tmp\0"  \
-    "uuid_get_mmc0=setenv devno 0; run uuid_get_mmc\0"  \
-    "uuid_get_mmc1=setenv devno 1; run uuid_get_mmc\0"  \
-    "uuid_get_usb=usb start; part uuid usb ${devno}:1 uuid_tmp\0"  \
-    "uuid_get_usb0=setenv devno 0; run uuid_get_usb\0"  \
-    "uuid_get_usb1=setenv devno 1; run uuid_get_usb\0"  \
-    "uuid_get_usb2=setenv devno 2; run uuid_get_usb\0"  \
-    "uuid_list=env delete uuids; for device in ${uuid_devices}; do if test ${target} != ${device}; then env delete uuid_tmp; run uuid_get_${device}; setenv uuids ${uuids} ${uuid_tmp}; fi; done\0"  \
-    "uuid_compare=for uuid_other in ${uuids}; do if test ${uuid_conflict} = no && env exists uuid_get && test ${uuid_other} = ${uuid_get}; then  echo \"** ERROR: uuid conflicts: \"${uuid}\" !!! **\"; setenv uuid_conflict yes; fi; done\0"  \
-    "uuid_verify=setenv uuid_conflict no; setenv uuid_break no; for target in ${boot_targets}; do if test ${uuid_break} = no; then env delete uuid_tmp; run uuid_get_${target}; setenv uuid_get ${uuid_tmp}; run uuid_list; run uuid_compare; if test ${target} = ${devtype}${devnum}; then setenv uuid_break yes; fi; fi; done\0"
-
 #define EXTRA_ENV_SELECT_FDT                           \
     "fdt_found=no\0"                                  \
     "fdt_select=if env exists board_name; then "       \
@@ -129,12 +115,78 @@
 #endif
 #include <config_distro_bootcmd.h>
 
+#define UUID_DEVICES \
+        "uuid_devices=" BOOT_TARGET_DEVICES(BOOTENV_DEV_NAME) "\0"
+#define UUID_CONFLICT_CHECK   \
+        "uuid_conflict_check="   \
+            "echo ====== uuid conflict check begin ======;"   \
+            "setenv uuid_conflict no;"   \
+            "run uuid_get_all;"   \
+            "setenv indexa a;"   \
+            "for uuida in ${uuidall}; do "  \
+                "setenv indexb a;"   \
+                "for uuidb in ${uuidall}; do "  \
+                    "if test $indexa != $indexb && test ${uuida} = ${uuidb}; then "   \
+                        "echo ** uuid conflict: ${uuida} **; echo ====== uuid conflict check end ======; setenv uuid_conflict yes; exit; fi;"   \
+                    "setenv indexb ${indexb}a;"   \
+                "done;"  \
+                "setenv indexa ${indexa}a;"   \
+            "done;"   \
+            "echo ====== uuid conflict check end ======\0"
+#define UUID_GET_DEV(devtypeu, devtypel, instance) \
+        "uuid_get_" #devtypel #instance "=" \
+            "setenv devtype " #devtypel ";" \
+            "setenv devnum " #instance ";" \
+            "run uuid_get_" #devtypel "\0"
+#define UUID_GET_MMC_SHARE  \
+        "uuid_get_mmc=if mmc dev ${devnum}; then run uuid_get; fi\0"
+#define UUID_GET_USB_SHARE \
+        "uuid_get_usb=if test ${usbreseted} = no; then usb reset; setenv usbreseted yes; fi; if usb dev ${devnum}; then run uuid_get; fi\0"
+#define UUID_GET_NET_SHARE \
+        "uuid_get_net=echo net does not upport get uuid\0"
+#define UUID_GET   \
+        "uuid_get="   \
+        "part list ${devtype} ${devnum} partlist;"   \
+            "if env exists partlist; then "   \
+                "for devpart in ${partlist}; do "   \
+                    "if part uuid ${devtype} ${devnum}:${devpart} uuid; then " \
+                        "setenv uuids ${uuids} ${uuid};"   \
+                    "fi;" \
+                "done;" \
+            "fi\0"
+#define UUID_GET_ALL   \
+        "uuid_get_all="   \
+            "env delete uuidall;"   \
+            "setenv usbreseted no;"   \
+            "for device in ${uuid_devices}; do "   \
+                "env delete uuids;"   \
+                "run uuid_get_${device};" \
+                "if env exists uuids; then " \
+                    "setenv uuidall ${uuidall} ${uuids};" \
+                "fi;" \
+            "done\0"
+
+#define UUID_CONFLICT_CHECK_ENV   \
+        UUID_CONFLICT_CHECK   \
+        UUID_DEVICES   \
+        UUID_GET   \
+        UUID_GET_ALL   \
+        UUID_GET_MMC_SHARE   \
+        UUID_GET_USB_SHARE   \
+        UUID_GET_NET_SHARE   \
+        BOOT_TARGET_DEVICES(UUID_GET_DEV)
+
+#ifdef CONFIG_BOOTCOMMAND
+#undef CONFIG_BOOTCOMMAND
+#define CONFIG_BOOTCOMMAND   "run uuid_conflict_check; if test $uuid_conflict = no; then run distro_bootcmd; fi"
+#endif
+
 /* Incorporate settings into the U-Boot environment */
 #define CONFIG_EXTRA_ENV_SETTINGS					\
 	BOOTENV								\
 	EXTRA_ENV_IOT2050_BOARD_SETTINGS	\
-	EXTRA_ENV_UUID_VERIFY   \
-	EXTRA_ENV_SELECT_FDT
+	EXTRA_ENV_SELECT_FDT   \
+	UUID_CONFLICT_CHECK_ENV
 #endif
 
 #define CONFIG_SUPPORT_EMMC_BOOT
-- 
2.17.1

