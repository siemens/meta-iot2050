From c104370b9ec41a0e93d2e8f1e97411806687036e Mon Sep 17 00:00:00 2001
From: Jan Kiszka <jan.kiszka@siemens.com>
Date: Tue, 19 May 2020 17:07:44 +0200
Subject: [PATCH 21/25] net: ti: icssg-prueth: Auto-start PRU and RTU when
 starting the interface

This avoids having to do that explicitly on every usage, allowing to
use the interface also in distro boot without massive changes to
existing scripts.

Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
---
 drivers/net/ti/icssg-prueth.c | 39 ++++++++++++++++++++++++++++++++++-
 1 file changed, 38 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ti/icssg-prueth.c b/drivers/net/ti/icssg-prueth.c
index 5abb221601..4cb1fa079f 100644
--- a/drivers/net/ti/icssg-prueth.c
+++ b/drivers/net/ti/icssg-prueth.c
@@ -390,14 +390,51 @@ static int icssg_update_link(struct prueth *priv)
 	return phy->link;
 }
 
+static int prueth_get_rproc_id(struct udevice *dev, int pru_index, int *pru_id)
+{
+	struct udevice *rproc_dev;
+	u32 phandle, err;
+	ofnode node;
+
+	err = ofnode_read_u32_index(dev_ofnode(dev), "prus", pru_index,
+				    &phandle);
+	if (err)
+		return err;
+
+	node = ofnode_get_by_phandle(phandle);
+	if (!ofnode_valid(node))
+		return -EINVAL;
+
+	err = uclass_get_device_by_ofnode(UCLASS_REMOTEPROC, node, &rproc_dev);
+	if (err)
+		return err;
+
+	*pru_id = rproc_dev->seq;
+
+	return 0;
+}
+
 static int prueth_start(struct udevice *dev)
 {
 	struct ti_udma_drv_chan_cfg_data *dma_rx_cfg_data;
 	struct prueth *priv = dev_get_priv(dev);
 	struct eth_pdata *pdata = dev->platdata;
-	int ret, i;
+	int ret, i, id;
 	char chn_name[16];
 
+	if (!rproc_is_initialized())
+		return -ENODEV;
+
+	for (i = 0; i < 2; i++) {
+		ret = prueth_get_rproc_id(dev, 2 * priv->slice + i, &id);
+		if (ret)
+			return ret;
+
+		ret = rproc_start(id);
+		if (ret)
+			return ret;
+	}
+
 	icssg_class_set_mac_addr(priv->miig_rt, priv->slice,
 				 (u8 *)pdata->enetaddr);
 	icssg_class_default(priv->miig_rt, priv->slice);
-- 
2.17.1

