From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Li Hua Qian <huaqian.li@siemens.com>
Date: Tue, 12 Nov 2024 16:56:33 +0800
Subject: [PATCH] Fix cross-compilation issue for pybuild

This patch fix the pybuild cross-comiplation issue. Since it is not
possible to use the previous intermediate artifacts in Isar, we rebuild
the libhailort in pybuild.

Signed-off-by: Li Hua Qian <huaqian.li@siemens.com>
---
 hailort/libhailort/CMakeLists.txt             |  3 ++
 .../bindings/python/src/CMakeLists.txt        | 16 ++++++++-
 hailort/libhailort/src/CMakeLists.txt         | 35 ++++++++++++++++++-
 3 files changed, 52 insertions(+), 2 deletions(-)

diff --git a/hailort/libhailort/CMakeLists.txt b/hailort/libhailort/CMakeLists.txt
index ab46f83483ad..259debb87301 100644
--- a/hailort/libhailort/CMakeLists.txt
+++ b/hailort/libhailort/CMakeLists.txt
@@ -27,6 +27,9 @@ target_include_directories(hef_proto
     $<BUILD_INTERFACE: ${Protobuf_INCLUDE_DIRS}>
 )
 
+if(NOT HAILO_BUILD_PROFILER)
+    option(HAILO_BUILD_PROFILER "Build hailort profiler" ON)
+endif()
 if(HAILO_BUILD_PROFILER)
     add_definitions( -DHAILO_ENABLE_PROFILER_BUILD )
 endif()
diff --git a/hailort/libhailort/bindings/python/src/CMakeLists.txt b/hailort/libhailort/bindings/python/src/CMakeLists.txt
index b96d64a77895..920c9395fd97 100644
--- a/hailort/libhailort/bindings/python/src/CMakeLists.txt
+++ b/hailort/libhailort/bindings/python/src/CMakeLists.txt
@@ -15,6 +15,14 @@ include(ExternalProject)
 include(GNUInstallDirs)
 include_directories(${HAILORT_COMMON_DIR})
 
+if(NOT Protobuf_FOUND)
+    find_package(Protobuf REQUIRED)
+endif()
+if(NOT TARGET libhailort)
+    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/../../../../hrpc_protocol/ ${CMAKE_BINARY_DIR}/rpc_proto)
+    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/../../../ ${CMAKE_BINARY_DIR}/libhailort)
+endif()
+
 FUNCTION(exclude_archive_libs_symbols target) # should be same as in common_compiler_options.cmake
     if(WIN32)
         # TODO: check if there are required actions for Windows
@@ -71,10 +79,16 @@ elseif(LIBHAILORT_PATH OR HAILORT_INCLUDE_DIR)
 else()
     message(STATUS "skip find_package, CMAKE_SYSTEM_NAME is ${CMAKE_SYSTEM_NAME}")
     message(STATUS "CMAKE_SYSTEM_PROCESSOR is ${CMAKE_SYSTEM_PROCESSOR}")
-    find_package(HailoRT 4.18.0 EXACT REQUIRED)
     
     include_directories("${HAILORT_PROJECT_SOURCE_DIR}/hailort/libhailort/include")
     target_link_libraries(_pyhailort PRIVATE libhailort)
+    target_compile_definitions(
+        _pyhailort
+        PUBLIC
+        HAILORT_MAJOR_VERSION=4
+        HAILORT_MINOR_VERSION=18
+        HAILORT_REVISION_VERSION=0
+    )
 endif()
 
 if(WIN32)
diff --git a/hailort/libhailort/src/CMakeLists.txt b/hailort/libhailort/src/CMakeLists.txt
index 048fdd0ffe38..10809b150694 100644
--- a/hailort/libhailort/src/CMakeLists.txt
+++ b/hailort/libhailort/src/CMakeLists.txt
@@ -38,7 +38,7 @@ if(HAILO_BUILD_SERVICE)
     add_subdirectory(service)
 endif()
 
-set(common_dir "${PROJECT_SOURCE_DIR}/common/src")
+set(common_dir "${CMAKE_CURRENT_SOURCE_DIR}/../../../common/src")
 set(COMMON_C_SOURCES
     ${common_dir}/firmware_status.c
     ${common_dir}/md5.c
@@ -64,6 +64,12 @@ set(HAILORT_SRCS_ABS ${HAILORT_CPP_SOURCES} ${HAILORT_COMMON_CPP_SOURCES} ${COMM
 SET_SOURCE_FILES_PROPERTIES(${C_SOURCES} PROPERTIES LANGUAGE CXX)
 add_library(libhailort SHARED ${HAILORT_SRCS_ABS})
 
+if(NOT DEFINED FIRMWARE_VERSION_MAJOR)
+    add_definitions( -DFIRMWARE_VERSION_MAJOR=4 )
+    add_definitions( -DFIRMWARE_VERSION_MINOR=18 )
+    add_definitions( -DFIRMWARE_VERSION_REVISION=0 )
+endif()
+
 # Include libraries
 if(WIN32)
     target_link_libraries(libhailort PRIVATE
@@ -87,7 +93,13 @@ target_link_libraries(libhailort PRIVATE Threads::Threads)
 target_link_libraries(libhailort PRIVATE hef_proto)
 target_link_libraries(libhailort PRIVATE profiler_proto)
 target_link_libraries(libhailort PRIVATE scheduler_mon_proto)
+if(NOT spdlog_FOUND)
+    find_package(spdlog REQUIRED)
+endif()
 target_link_libraries(libhailort PRIVATE spdlog::spdlog)
+if(NOT Eigen3_FOUND)
+    find_package(Eigen3 REQUIRED)
+endif()
 target_link_libraries(libhailort PRIVATE Eigen3::Eigen)
 
 target_link_libraries(libhailort PRIVATE rpc_proto)
@@ -143,6 +155,27 @@ target_compile_options(libhailort PRIVATE ${HAILORT_COMPILE_OPTIONS})
 disable_exceptions(libhailort)
 exclude_archive_libs_symbols(libhailort)
 
+if(NOT HAILORT_INC_DIR)
+    set(HAILORT_INC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../include")
+endif()
+if(NOT HAILORT_COMMON_DIR)
+    set(HAILORT_COMMON_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../../")
+endif()
+if(NOT HAILORT_SRC_DIR)
+    set(HAILORT_SRC_DIR "${CMAKE_CURRENT_SOURCE_DIR}")
+endif()
+if(NOT COMMON_INC_DIR)
+    set(COMMON_INC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../../../common/include")
+endif()
+if(NOT DRIVER_INC_DIR)
+    set(DRIVER_INC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../../drivers/common")
+endif()
+if(NOT RPC_DIR)
+    set(RPC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../../../rpc")
+endif()
+if(NOT HRPC_DIR)
+    set(HRPC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../../../hrpc")
+endif()
 target_include_directories(libhailort
     PUBLIC
     $<BUILD_INTERFACE:${HAILORT_INC_DIR}>
-- 
2.34.1

