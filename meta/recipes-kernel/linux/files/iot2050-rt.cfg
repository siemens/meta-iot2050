##################################################
# Real Time Linux Configs
##################################################

CONFIG_PREEMPT=y
CONFIG_PREEMPT_RT=y

#Disable PM features
CONFIG_CPU_IDLE=n
CONFIG_CPU_FREQ=n
CONFIG_SUSPEND=n
CONFIG_HOTPLUG_CPU=y

# SCHED_DEBUG provides a lot of additional options for scheduler
# tuning in /proc/sys/kernel/ and allows to see scheduler statistic in
# /proc/sched_debug
# CONFIG_SCHED_DEBUG

# --- RCU optimization options to reduce OS jitter
# RCU_BOOST : This option boosts the priority of preempted RCU readers that
# block the current preemptible RCU grace period for too long.
# This option also prevents heavy loads from blocking RCU
# callback invocation for all flavors of RCU
# CONFIG_RCU_BOOST=n

# RCU_NOCB_CPU : Use this option to reduce OS jitter for aggressive HPC or
# real-time workloads.	It can also be used to offload RCU
# callback invocation to energy-efficient CPUs in battery-powered
# asymmetric multiprocessors.
# CONFIG_RCU_NOCB_CPU=y

# RCU_NOCB_CPU_ALL: his option forces all CPUs to be no-CBs CPUs.
# The rcu_nocbs= boot parameter will be ignored.  All CPUs' RCU callbacks will
# be executed in the context of per-CPU rcuo kthreads created for
# this purpose.
# CONFIG_RCU_NOCB_CPU_ALL=y

# disable 64K pages as they proved to be source of RT latencies
CONFIG_ARM64_64K_PAGES=n

# still conflicts with PREEMPT_RT
# CONFIG_RT_GROUP_SCHED is not set
