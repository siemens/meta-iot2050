# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from gRPC.EIOManager import iot2050_eio_pb2 as gRPC_dot_EIOManager_dot_iot2050__eio__pb2


class EIOManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Deploy = channel.unary_unary(
                '/eiomanager.EIOManager/Deploy',
                request_serializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.DeployRequest.SerializeToString,
                response_deserializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.DeployReply.FromString,
                )
        self.Retrieve = channel.unary_unary(
                '/eiomanager.EIOManager/Retrieve',
                request_serializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.RetrieveRequest.SerializeToString,
                response_deserializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.RetrieveReply.FromString,
                )
        self.SyncTime = channel.unary_unary(
                '/eiomanager.EIOManager/SyncTime',
                request_serializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.SyncTimeRequest.SerializeToString,
                response_deserializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.SyncTimeReply.FromString,
                )
        self.UpdateFirmware = channel.unary_unary(
                '/eiomanager.EIOManager/UpdateFirmware',
                request_serializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.UpdateFirmwareRequest.SerializeToString,
                response_deserializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.UpdateFirmwareReply.FromString,
                )
        self.CheckFWU = channel.unary_unary(
                '/eiomanager.EIOManager/CheckFWU',
                request_serializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.CheckFWURequest.SerializeToString,
                response_deserializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.CheckFWUReply.FromString,
                )
        self.ReadEIOEvent = channel.unary_unary(
                '/eiomanager.EIOManager/ReadEIOEvent',
                request_serializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.ReadEIOEventRequest.SerializeToString,
                response_deserializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.ReadEIOEventReply.FromString,
                )


class EIOManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Deploy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Retrieve(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFirmware(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckFWU(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadEIOEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EIOManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Deploy': grpc.unary_unary_rpc_method_handler(
                    servicer.Deploy,
                    request_deserializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.DeployRequest.FromString,
                    response_serializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.DeployReply.SerializeToString,
            ),
            'Retrieve': grpc.unary_unary_rpc_method_handler(
                    servicer.Retrieve,
                    request_deserializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.RetrieveRequest.FromString,
                    response_serializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.RetrieveReply.SerializeToString,
            ),
            'SyncTime': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncTime,
                    request_deserializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.SyncTimeRequest.FromString,
                    response_serializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.SyncTimeReply.SerializeToString,
            ),
            'UpdateFirmware': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFirmware,
                    request_deserializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.UpdateFirmwareRequest.FromString,
                    response_serializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.UpdateFirmwareReply.SerializeToString,
            ),
            'CheckFWU': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckFWU,
                    request_deserializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.CheckFWURequest.FromString,
                    response_serializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.CheckFWUReply.SerializeToString,
            ),
            'ReadEIOEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadEIOEvent,
                    request_deserializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.ReadEIOEventRequest.FromString,
                    response_serializer=gRPC_dot_EIOManager_dot_iot2050__eio__pb2.ReadEIOEventReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'eiomanager.EIOManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EIOManager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Deploy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/eiomanager.EIOManager/Deploy',
            gRPC_dot_EIOManager_dot_iot2050__eio__pb2.DeployRequest.SerializeToString,
            gRPC_dot_EIOManager_dot_iot2050__eio__pb2.DeployReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Retrieve(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/eiomanager.EIOManager/Retrieve',
            gRPC_dot_EIOManager_dot_iot2050__eio__pb2.RetrieveRequest.SerializeToString,
            gRPC_dot_EIOManager_dot_iot2050__eio__pb2.RetrieveReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/eiomanager.EIOManager/SyncTime',
            gRPC_dot_EIOManager_dot_iot2050__eio__pb2.SyncTimeRequest.SerializeToString,
            gRPC_dot_EIOManager_dot_iot2050__eio__pb2.SyncTimeReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateFirmware(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/eiomanager.EIOManager/UpdateFirmware',
            gRPC_dot_EIOManager_dot_iot2050__eio__pb2.UpdateFirmwareRequest.SerializeToString,
            gRPC_dot_EIOManager_dot_iot2050__eio__pb2.UpdateFirmwareReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckFWU(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/eiomanager.EIOManager/CheckFWU',
            gRPC_dot_EIOManager_dot_iot2050__eio__pb2.CheckFWURequest.SerializeToString,
            gRPC_dot_EIOManager_dot_iot2050__eio__pb2.CheckFWUReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadEIOEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/eiomanager.EIOManager/ReadEIOEvent',
            gRPC_dot_EIOManager_dot_iot2050__eio__pb2.ReadEIOEventRequest.SerializeToString,
            gRPC_dot_EIOManager_dot_iot2050__eio__pb2.ReadEIOEventReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
